{"ast":null,"code":"var _jsxFileName = \"D:\\\\COURS\\\\S5\\\\Rojo\\\\Projet\\\\Ionic\\\\template\\\\ionic1\\\\src\\\\pages\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { IonHeader, IonPage, IonToolbar, IonTitle, IonContent, IonItem, IonLabel, IonInput, IonButton } from \"@ionic/react\";\nimport { RemoteService } from \"../services/remote.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const remoteService = new RemoteService();\n  const [error, setError] = useState({\n    error: false\n  });\n  const loginForm = useRef(null); // useEffect(() => {\n  //     let token = sessionStorage.getItem('userToken');\n  //     console.log('loginForm :', loginForm);\n  //     if (loginForm && loginForm.current) {\n  //         loginForm.current.reset();\n  //     }\n  //     if (token) {\n  //         history.push('/home');\n  //     } else {\n  //         history.push('/login');\n  //     }\n  // }, []);\n  // if(!sessionStorage.getItem(\"Token\")){\n  //     history.push('../App');\n  // }\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Syntax : var formData = new FormData(form)\n    // Ref : https://medium.com/@everdimension/how-to-handle-forms-with-just-react-ac066c48bd4f\n\n    const form = event.target.closest(\"form\");\n    const formData = new FormData(form);\n    const formDataObj = {\n      username: formData.get(\"email\"),\n      password: formData.get(\"mdp\")\n    };\n    const options = {\n      endPoint: `login`,\n      restOfUrl: \"\",\n      isSecure: true,\n      contentType: \"application/json\"\n    };\n    remoteService.request(\"POST\", options, formDataObj).then(data => {\n      if (formDataObj.password == \"test\" && formDataObj.username == \"test\") {\n        // data.username =\"aa\";\n        // console.log(\"yes\");\n        sessionStorage.setItem(\"Token\", \"aa\");\n        history.push(\"/InsertSignilement\");\n      } else {\n        alert(\"mots de passe incorrect\");\n      }\n    }); // const options: IUrlOptions = {\n    //     endPoint: ``,\n    //     restOfUrl: '',\n    //     isSecure: true,\n    //     contentType: 'application/json'\n    // };\n    // remoteService.request('GET', options).then((data) => {\n    //     if (formDataObj.password ==\"aa\") {\n    //                 // data.username =\"aa\";\n    //                 // console.log(\"yes\");\n    //                 sessionStorage.setItem('Token', \"aa\");\n    //                 history.push('/home');\n    //     }\n    //             else{\n    //                 alert(\"mots de passe incorrect\");\n    //             }\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(IonTitle, {\n          children: \"Connectez vous pour signaler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        ref: loginForm,\n        name: \"formLogin\",\n        id: \"formLogin\",\n        method: \"POST\",\n        onSubmit: handleSubmit,\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            placeholder: \"example@gmail.com\",\n            type: \"text\",\n            name: \"email\",\n            id: \"email\",\n            value: \"test\",\n            autocomplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            position: \"floating\",\n            children: \"mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            type: \"password\",\n            name: \"mdp\",\n            id: \"mdp\",\n            value: \"test\",\n            autocomplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(IonButton, {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}; // export default Details;\n\n\n_s(LoginPage, \"uc++srxcU3tAj3yAxTOGvTUtkCc=\");\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["D:/COURS/S5/Rojo/Projet/Ionic/template/ionic1/src/pages/Login.tsx"],"names":["React","useState","useRef","IonHeader","IonPage","IonToolbar","IonTitle","IonContent","IonItem","IonLabel","IonInput","IonButton","RemoteService","LoginPage","history","remoteService","error","setError","loginForm","handleSubmit","event","preventDefault","form","target","closest","formData","FormData","formDataObj","username","get","password","options","endPoint","restOfUrl","isSecure","contentType","request","then","data","sessionStorage","setItem","push","alert"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  IonHeader,\r\n  IonPage,\r\n  IonToolbar,\r\n  IonTitle,\r\n  IonContent,\r\n  IonItem,\r\n  IonLabel,\r\n  IonInput,\r\n  IonButton,\r\n} from \"@ionic/react\";\r\nimport { IUrlOptions } from \"../models/rest-api.model\";\r\nimport { RemoteService } from \"../services/remote.service\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LoginPage: React.FC = ({ history }: any) => {\r\n  const remoteService = new RemoteService();\r\n  const [error, setError] = useState({ error: false });\r\n  const loginForm = useRef<HTMLFormElement>(null);\r\n\r\n  // useEffect(() => {\r\n  //     let token = sessionStorage.getItem('userToken');\r\n  //     console.log('loginForm :', loginForm);\r\n  //     if (loginForm && loginForm.current) {\r\n  //         loginForm.current.reset();\r\n  //     }\r\n  //     if (token) {\r\n  //         history.push('/home');\r\n  //     } else {\r\n  //         history.push('/login');\r\n  //     }\r\n  // }, []);\r\n\r\n  // if(!sessionStorage.getItem(\"Token\")){\r\n  //     history.push('../App');\r\n  // }\r\n\r\n  const handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n\r\n    // Syntax : var formData = new FormData(form)\r\n    // Ref : https://medium.com/@everdimension/how-to-handle-forms-with-just-react-ac066c48bd4f\r\n    const form = event.target.closest(\"form\");\r\n    const formData = new FormData(form);\r\n\r\n    const formDataObj = {\r\n      username: formData.get(\"email\"),\r\n      password: formData.get(\"mdp\"),\r\n    };\r\n\r\n    const options: IUrlOptions = {\r\n      endPoint: `login`,\r\n      restOfUrl: \"\",\r\n      isSecure: true,\r\n      contentType: \"application/json\",\r\n    };\r\n\r\n    remoteService.request(\"POST\", options, formDataObj).then((data) => {\r\n      if (formDataObj.password == \"test\" && formDataObj.username == \"test\") {\r\n        // data.username =\"aa\";\r\n        // console.log(\"yes\");\r\n\r\n        sessionStorage.setItem(\"Token\", \"aa\");\r\n\r\n        history.push(\"/InsertSignilement\");\r\n      } else {\r\n        alert(\"mots de passe incorrect\");\r\n      }\r\n    });\r\n    // const options: IUrlOptions = {\r\n    //     endPoint: ``,\r\n    //     restOfUrl: '',\r\n    //     isSecure: true,\r\n    //     contentType: 'application/json'\r\n    // };\r\n\r\n    // remoteService.request('GET', options).then((data) => {\r\n    //     if (formDataObj.password ==\"aa\") {\r\n    //                 // data.username =\"aa\";\r\n    //                 // console.log(\"yes\");\r\n\r\n    //                 sessionStorage.setItem('Token', \"aa\");\r\n\r\n    //                 history.push('/home');\r\n    //     }\r\n    //             else{\r\n    //                 alert(\"mots de passe incorrect\");\r\n    //             }\r\n    // })\r\n  };\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonTitle>Connectez vous pour signaler</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent>\r\n        <form\r\n          ref={loginForm}\r\n          name=\"formLogin\"\r\n          id=\"formLogin\"\r\n          method=\"POST\"\r\n          onSubmit={handleSubmit}\r\n          encType=\"multipart/form-data\"\r\n        >\r\n          <IonItem>\r\n            <IonLabel position=\"floating\">E-mail</IonLabel>\r\n            <IonInput\r\n              placeholder=\"example@gmail.com\"\r\n              type=\"text\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              value=\"test\"\r\n              autocomplete=\"off\"\r\n            ></IonInput>\r\n          </IonItem>\r\n          <IonItem>\r\n            <IonLabel position=\"floating\">mot de passe</IonLabel>\r\n            <IonInput\r\n              type=\"password\"\r\n              name=\"mdp\"\r\n              id=\"mdp\"\r\n              value=\"test\"\r\n              autocomplete=\"off\"\r\n            ></IonInput>\r\n          </IonItem>\r\n          <div className=\"button-wrapper\">\r\n            <IonButton type=\"submit\">Login</IonButton>\r\n          </div>\r\n        </form>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\n// export default Details;\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}